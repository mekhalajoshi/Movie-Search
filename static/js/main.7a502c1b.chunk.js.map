{"version":3,"sources":["components/Header.jsx","components/SearchBar.jsx","components/MovieDetails.jsx","api/getOmdbData.js","components/MovieCard.jsx","components/MovieCardGrid.jsx","components/MovieSearchApp.jsx","App.js","index.js"],"names":["Header","AppBar","position","Toolbar","Typography","variant","align","styles","Paper","margin","padding","alignItems","display","InputBase","marginLeft","flex","SearchBar","props","onTextChange","e","onChange","target","value","onSubmit","bind","style","placeholder","inputProps","this","IconButton","onClick","Component","MovieDetails","Dialog","fullWidth","maxWidth","open","onClose","Grid","container","alignContent","item","xs","height","src","poster","alt","title","flexGrow","DialogTitle","year","DialogContent","DialogContentText","actors","plot","PATH_BASE","PARAM_SEARCH_TITLE","PARAM_SEARCH_ID","getMoviesByTitle","searchTerm","a","async","fetch","res","json","data","Search","getMoviesById","Card","width","CardMedia","maxHeight","CardContent","overflowWrap","MovieCard","handleClickClose","setState","state","handleClickOpen","getMovieDetails","imdbID","m","CardActionArea","component","image","gutterBottom","key","Plot","Actors","GridContainer","MovieCardGrid","movieDetails","nextProps","nextState","mymovies","spacing","map","movie","marginBottom","Title","Poster","Year","MovieSearchApp","handleChange","text","handleSubmit","console","log","temp","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a502c1b.chunk.js","sourcesContent":["import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nexport default function Header () {\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant='h5' align='right'>\n            Movie Search App\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\nimport PropTypes from 'prop-types'\n\nconst styles = {\n\tPaper: {\n\t\tmargin: '20px',\n\t\tpadding: '10',\n\t\talignItems: 'center',\n\t\tdisplay: 'flex'\n\t},\n\tInputBase: {\n\t\tmarginLeft: 8,\n\t\tflex: 1\n\t}\n}\n\nexport default class SearchBar extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.onTextChange = this.onTextChange.bind(this)\n\t\tthis.onSubmit = this.onSubmit.bind(this)\n\t}\n\n\tonTextChange = e => {\n\t\tthis.props.onChange(e.target.value)\n\t}\n\n\tonSubmit = () => {\n\t\tthis.props.onSubmit()\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Paper style={styles.Paper}>\n\t\t\t\t\t<InputBase\n\t\t\t\t\t\tstyle={styles.InputBase}\n\t\t\t\t\t\tplaceholder=\"Movie Search App\"\n\t\t\t\t\t\tinputProps={{ 'aria-label': 'Movie Search App' }}\n\t\t\t\t\t\tonChange={this.onTextChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<IconButton onClick={this.onSubmit}>\n\t\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Paper>\n\t\t\t</div>\n\t\t)\n\t}\n}\nSearchBar.propTypes = {\n\tonChange: PropTypes.func,\n\tonSubmit: PropTypes.func\n}\n","import React, { Component } from 'react'\nimport { Dialog, Grid, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\n\nexport default class MovieDetails extends Component {\n  render () {\n    return (\n      <div>\n        <Dialog\n          fullWidth={true}\n          maxWidth=\"lg\"\n          open={this.props.open}\n          onClose={this.props.onClose}\n        >\n          <Grid\n            container\n            alignContent='flex-start'\n            alignItems='flex-start'\n          >\n            <Grid\n              item\n              xs='auto'\n              style={{ margin: 'auto' }}\n            >\n              <img style={{ height: 350, padding: 7 }} src={this.props.poster} alt={this.props.title} />\n            </Grid>\n            <Grid\n              item\n              xs={9}\n              style={{ flexGrow: 2, margin: 'auto' }}\n            >\n              <DialogTitle >\n                {this.props.title} ({this.props.year})\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  Cast:{this.props.actors}\n                  < br />\n                  Plot:{this.props.plot}\n                </DialogContentText>\n              </DialogContent>\n            </Grid>\n          </Grid>\n        </Dialog>\n      </div>\n    )\n  }\n}\n","const PATH_BASE = 'https://www.omdbapi.com/?apikey=5d9a0e5e'\nconst PARAM_SEARCH_TITLE = '&s='\nconst PARAM_SEARCH_ID = '&i='\n\nexport async function getMoviesByTitle (searchTerm) {\n  const res = await fetch(`${PATH_BASE}${PARAM_SEARCH_TITLE}${searchTerm}`)\n  const data = await res.json()\n  return data.Search\n}\n\nexport async function getMoviesById(searchTerm) {\n  const res = await fetch(`${PATH_BASE}${PARAM_SEARCH_ID}${searchTerm}`)\n  const data = await res.json()\n  return data;\n}\n","import React, { Component } from 'react'\nimport MovieDetails from './MovieDetails'\nimport PropTypes from 'prop-types';\nimport { getMoviesById} from '../api/getOmdbData.js'\n\nimport { Card, CardMedia, CardActionArea, CardContent, Typography } from '@material-ui/core'\n\nconst styles = {\n  Card: {\n    width: '250px',\n    height: '400px',\n    margin: 'auto'\n\n  },\n  CardMedia: {\n    width: 'auto',\n    height: '100%',\n    maxHeight: '350px',\n    maxWidth: '250px',\n    margin: 'auto'\n  },\n  CardContent: {\n    padding: '5px'\n  },\n  Typography: {\n    margin: 0,\n    overflowWrap: 'break-word'\n  }\n}\n\n// const movie = {\n//   Title: 'Rogue One: A Star Wars Story',\n//   Year: '2016',\n//   imdbID: 'tt3748528',\n//   Type: 'movie',\n//   Poster: 'https://m.media-amazon.com/images/M/MV5BMjEwMzMxODIzOV5BMl5BanBnXkFtZTgwNzg3OTAzMDI@._V1_SX300.jpg',\n//   Plot: 'The daughter of an Imperial scientist joins the Rebel Alliance in a risky move to steal the Death Star plans.',\n//   Actors: 'Felicity Jones, Diego Luna, Alan Tudyk, Donnie Yen'\n// }\n\nexport default class MovieCard extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      MovieDetails: [],\n      open: false\n    }\n  }\n  async getMovieDetails(){\n    const m = await getMoviesById(this.props.imdbID);\n    this.setState({\n      MovieDetails: m\n    })\n    return m\n  }\n  handleClickClose=()=>{\n    this.setState({\n      open: !this.state.open,\n    })  \n  }\n\n  handleClickOpen = () => {\n    this.getMovieDetails(this.props.imdbID)\n    this.setState({\n      open: !this.state.open,\n    })  \n\n  }\n\n  render () {\n    return (\n      <div>\n        <Card\n          style={styles.Card}\n        >\n          <CardActionArea\n            onClick={this.handleClickOpen}\n          >\n            <CardMedia\n              style={styles.CardMedia}\n              component=\"img\"\n              alt={this.props.title}\n              image={this.props.poster}\n              title={this.props.title}\n            />\n            <CardContent\n              style={styles.CardContent}\n            >\n              <Typography\n                style={styles.Typography}\n                gutterBottom\n                variant=\"subtitle2\" >\n                {this.props.title}\n              </Typography>\n            </CardContent>\n\n            <MovieDetails\n              open={this.state.open}\n              onClose={this.handleClickClose}\n              key={this.props.imdbID}\n              title={this.props.title}\n              poster={this.props.poster}\n              year={this.props.year}\n              imdbID={this.props.imdbID}\n              plot={this.state.MovieDetails.Plot}\n              actors={this.state.MovieDetails.Actors}\n            />\n          </CardActionArea>\n\n        </Card>\n\n      </div>\n    )\n  }\n}\n\nMovieCard.propTypes = {\n  imdbID: PropTypes.string,\n  title:PropTypes.string,\n  poster:PropTypes.string,\n  year:PropTypes.string,\n  getMovieDetails: PropTypes.func,\n};","import React, { Component } from 'react'\nimport MovieCard from './MovieCard'\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core'\n// import { getMoviesById} from '../api/getOmdbData.js'\n\nconst styles = {\n  GridContainer: {\n    padding: '20px',\n    margin: 'auto'\n  }\n}\n\nexport default class MovieCardGrid extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      searchTerm: 'happy',\n      movieDetails:[]\n    }\n  }\n  // async componentDidMount () {\n  //   const m = await getMoviesById(this.state.searchTerm)\n  //   this.setState({\n  //     movieDetails: m\n  //   })\n  //   console.log('MovieSearchApp movieDetails    :' + this.state.mymovies)\n  // }\n\n  shouldComponentUpdate (nextProps, nextState) {\n    return (this.props.mymovies !== nextProps.mymovies)\n  }\n\n  // async getMovieDetails(data){\n  //   const m = await getMoviesById(data);\n    // console.log(m)\n\n    // this.setState({\n    //       movieDetails: m\n    //     })\n    // console.log(m)\n  //   return m\n  // }\n\n  render () {\n\n    return (\n      <div>\n        <Grid\n          container\n          spacing={3}\n          style={styles.GridContainer}\n        >\n          {this.props.mymovies.map(movie => {\n            return (\n              <Grid item key={movie.imdbID} style={{ marginBottom: '10px' }} >\n                <MovieCard\n                  key={movie.imdbID}\n                  title={movie.Title}\n                  poster={movie.Poster}\n                  year={movie.Year}\n                  imdbID={movie.imdbID}\n                  getMovieDetails={this.getMovieDetails}\n                  movieDetails={this.state.movieDetails}\n                />\n              </Grid>\n            )\n          })}\n\n        </Grid>\n      </div>\n    )\n  }\n}\nMovieCardGrid.propTypes = {\n  mymovies: PropTypes.array,\n};","import React, { Component } from 'react'\nimport Header from './Header'\nimport SearchBar from './SearchBar'\nimport MovieCardGrid from './MovieCardGrid'\nimport { getMoviesByTitle } from '../api/getOmdbData.js'\n\nexport default class MovieSearchApp extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      searchTerm: 'happy',\n      mymovies: []\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  async componentDidMount () {\n    const m = await getMoviesByTitle(this.state.searchTerm)\n    this.setState({\n      mymovies: m\n    })\n    console.log('MovieSearchApp mymovies    :' + this.state.mymovies)\n  }\n\n  handleChange = text => {\n    this.setState({\n      searchTerm: text\n    })\n\n    // console.log(this.state.mymovies);\n  };\n\n  async handleSubmit (text) {\n    const temp = await getMoviesByTitle(this.state.searchTerm)\n    this.setState({\n      searchTerm: text,\n      mymovies: temp\n    })\n\n    // console.log(this.state.mymovies);\n  }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //     if (this.state.searchTerm !== this.nextState.searchTerm) {\n  //         return false;\n  //     }\n\n  //     return true;\n  // }\n\n  render () {\n    return (\n      <div>\n        <Header />\n        <SearchBar onSubmit={this.handleSubmit} onChange={this.handleChange} />\n        <MovieCardGrid\n          mymovies={this.state.mymovies}\n        />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport MovieSearchApp from './components/MovieSearchApp';\n\nclass App extends Component {\n  render() {\n    return (\n      <div >\n        <MovieSearchApp />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}